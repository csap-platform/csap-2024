#
# for this demo - a singe csap mgmt admin and single kubernetes master are used. Both can be multiple bosts for ha.
#
# Update:
#   $managerHost - k8s master, csap-admin
#   $hostDomain -  hostDomain
#   $appName - name of application
#   $apiToken - rest apis betweem csap-agents - csap-admin - csap events
#   $appId - used for event and project ids (lowercase hyphenated)
#
#

operator: modify
target: default


environments:

  #
  # derive: from "default" application, which defines a "dev" environment
  #
  base: dev
  
  #
  # Cluster host assignment:
  #   - use host short name
  #   - optional: specify short name everywhere; or use index of hostname from base-os cluster
  #                
  hosts: 
    base-os: [ $managerHost  ]
    csap-management: [ 1 ]
    kubernetes-provider: [ 1 ]
    kubernetes-masters:  [ 1 ]
  

  application-name: "$appName"
  project-name: "$appId"
  project-contact: "xxx.xxx@$hostDomain"
  
  git: https://github.com/xxx/xxx-definition.git


  #
  # update target env
  #
  settings:
  
    loadbalancer-url: http://$managerHost.$hostDomain:8080
    
    configuration-maps: 
    
      docker:
        allowRemote: true
        
      kubelet:
        # master and worker combined, with swap enabled
        kubernetesAllInOne: true
        
      ingress-nginx:
        $$ingress-host: "*.$hostDomain" # used to determine ingress launch urls and routing rules
        $$ingress-node-selector: "\"kubernetes.io/os\": linux"
        $$ingress-http-port: 7080
        $$ingress-https-port: 7443
    
  default-settings:  # defaults for ALL envs
  
    application:
      name: "$appName"
  
    csap-data:
      user: events-disabled
      # user: $appId
      credential: "$apiToken"
      service-url: "http://$managerHost.$hostDomain:8080/events-service"
        
#    configuration-maps:
#    
#      docker:
#        dockerRepo: http://media.$hostDomain/media/third_party/linux/CentOS/docker-ce.repo
#        
#      kubelet:
#        kubernetesRepo: http://media.$hostDomain/media/third_party/kubernetes/kubernetes-el7.repo
        


  #
  # adding in csap-management and kubernetes
  #
  clusters: 
  
    #
    # csap-admin provide core cluster management
    #
    csap-management: 
      notes: "For production clusters, 2 hosts are recommended. All others - a single host is sufficient"
      type: modjk

      hosts:
        - updated-in-hosts
        
      template-references: 
        - csap-admin
        - httpd

    #
    # singe master clusters are ok for non-prod; generally 3 nodes
    #  
    kubernetes-provider: 
      type: kubernetes-provider

      masters:
        - updated-in-hosts
        
      hosts:
        - updated-in-hosts
        
      template-references: 
        - kubelet
    
    kubernetes-system-services: 
      type: kubernetes
      kubernetes-provider: kubernetes-provider
      kubernetes-namespace: kube-system
      template-references: 
        - calico-kube-controllers
        - calico-node
        - coredns
        - etcd
        - kube-apiserver
        - kube-controller-manager
        - kube-proxy
        - kube-scheduler
        - kubernetes-dashboard
        - metrics-server
        - ingress-nginx
        # Note: only enable client provisioner if nfs configured
        # - nfs-client-provisioner



service-templates:
  csap-demo-nginx.docker.image: "nginx:latest"
  

operations: 
  - inserts:
    - path: /environments/defaults/base-os/template-references
      value: docker

      

---
#
# Core csap settings: demo-xxx Morrisville Security(LDAP)
#
operator: create
target: application-company.yml

#
# Global settings for applications - test
#



     
csap-core:

  kubernetes: 
    enabled: true

  docker: 
    enabled: true
    
  source-overrides:
    csap-admin: https://bitbucket.org/somecompany2/oss-csap-core.git
    csap-agent: https://bitbucket.org/somecompany2/oss-csap-core.git
    
    events-service: https://bitbucket.org/somecompany2/oss-csap-event-services.git
    events-service-beta: https://bitbucket.org/somecompany2/oss-csap-event-services.git
    
    csap-verify-service: https://bitbucket.org/somecompany2/oss-csap-starter.git
    
    docker: https://bitbucket.org/somecompany2/oss-csap-packages.git
    podman-system-service: https://bitbucket.org/somecompany2/oss-csap-packages.git
    crio: https://bitbucket.org/somecompany2/oss-csap-packages.git
    kubelet: https://bitbucket.org/somecompany2/oss-csap-packages.git
    csap-package-java: https://bitbucket.org/somecompany2/oss-csap-packages.git
    csap-package-linux: https://bitbucket.org/somecompany2/oss-csap-packages.git
    csap-package-tomcat: https://bitbucket.org/somecompany2/oss-csap-packages.git
    httpd: https://bitbucket.org/somecompany2/oss-csap-packages.git
    

#
# health and data services
#
#csap-events: 
#
#  health-monitoring: 
#    appIds:
#      - xxx
#    lifes:
#      - dev

csap.security: 
    rest-api-filter.token: "k16ljSCT5UnF8o1fCyshcD3+VZtrWm2c"
    provider:
      type: ldap
      url: ldap://ldap.somecompany4.demo-xxx.lab:389
      directory-dn: search:uid={0}
      search-user: ou=People,dc=flexnet,dc=net
      search-groups: ou=Groups,dc=flexnet,dc=net
      


---
#
# Optional: demo-xxx Morrisville Artifactory Repository
#
operator: create
target: resources/settings.xml

content: |
  <?xml version="1.0" encoding="UTF-8"?>
  <settings
    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"
    xmlns="http://maven.apache.org/SETTINGS/1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
    <localRepository>${CSAP_FOLDER}/maven-repository</localRepository>
  
    <servers>
  
      <server>
        <id>demo-xxx-artifactory-community</id>
        <username>pnightingale</username>
        <password>update-me</password>
      </server>
      <server>
        <id>csap-release-repo</id>
        <username>pnightingale</username>
        <password>update-me</password>
      </server>
  
      <server>
        <id>csap-snapshot-repo</id>
        <username>pnightingale</username>
        <password>update-me</password>
      </server>
  
    </servers>
    <mirrors>
      <mirror>
        <id>demo-xxx-artifactory-community</id>
        <mirrorOf>*</mirrorOf>
        <url>http://devops-prod01.csap.org:8081/artifactory/maven</url>
      </mirror>
    </mirrors>
    <profiles>
      <profile>
        <id>demo-xxx-artifactory-community</id>
  
        <properties>
          <csapReleaseUrl>http://devops-prod01.csap.org:8081/artifactory/csap-release</csapReleaseUrl>
          <csapSnapUrl>http://devops-prod01.csap.org:8081/artifactory/csap-snapshots</csapSnapUrl>
          <artifactoryCnameFqdn>demo-xxx-artifactory-community.csap.org</artifactoryCnameFqdn>
        </properties>
  
        <repositories>
          <repository>
            <snapshots>
              <enabled>true</enabled>
              <updatePolicy>always</updatePolicy>
            </snapshots>
            <id>demo-xxx-artifactory-community</id>
            <name>central</name>
            <url>http://central</url>
            <releases>
              <enabled>true</enabled>
              <updatePolicy>always</updatePolicy>
            </releases>
          </repository>
        </repositories>
        <pluginRepositories>
          <pluginRepository>
            <id>central</id>
            <url>http://central</url>
            <snapshots>
              <enabled>true</enabled>
            </snapshots>
            <releases>
              <enabled>true</enabled>
            </releases>
          </pluginRepository>
        </pluginRepositories>
      </profile>
      
      
      <!-- USED in java spring boot build manifest -->
      <profile>
        <id>jenkins-node-name-default</id>
        <activation>
          <property>
            <name>!env.NODE_NAME</name>
          </property>
        </activation>
        <properties>
          <build.node>built-on-unofficial-host</build.node>
        </properties>
      </profile>
  
      <profile>
        <id>jenkins-node-name-from-env</id>
        <activation>
          <property>
            <name>env.NODE_NAME</name>
          </property>
        </activation>
        <properties>
          <build.node>${env.NODE_NAME}</build.node>
        </properties>
      </profile>
      
    </profiles>
    <activeProfiles>
      <activeProfile>demo-xxx-artifactory-community</activeProfile>
    </activeProfiles>
  </settings>

